
Ariel:
This week: 
          - Finished the implementation of the generator algorithm for one closed position and
            created to match the output required for the switch team using a vector of vectors
	  - Created new functions to make the usage of the Class Chessboard easier.
	  - Started on the file generator for many closed positions
Next week:
	  - Finish making the file generator for many closed positions (using as input the amount of 
            needed closed positions
	  - Finish testing the generator and work with the switch team for final edits.
 	  - See during the lecture what the next tasks will be

Sirawit:
	This week:
		- Use logger to inject stockfish
		- Configured doxygen hosting
		- Configured CD to check compilation on PR
	Next week:
		- [Urgent] Finish stockfish

Shirelle: 
	This week: 
	        - created a function for square color of the pions
		- worked on my function 
	Next week: 
		- find a solution for bishops to be on diagonals in the function completion
		-create function to verify if the king is in check

Aarrya:
	This week: 
		- Finished the 1 person DFS algorithm 
		- made plans and dsitributed work for next weeks
	Next week:
		- merge all algorithms till now into one.
		- finalise work for everyone
		
		
Antonia:
	This week:
		-debugged all the functions involved in giving the number of pieces protecting the target pawn
	Next week:
		-implement a function that tells if the pawn is passed
		-implement a function that tells for each piece if it can or not protect tge target pawn

Etienne: 
This week:
 ⁃ I finished debugging and testing the generator project.
 ⁃ Helped team finish their respective functions.
 ⁃ Started my switch to the algorithm team which requires a lot of research and catching up to the current team knowledge and code.

Next Week:
 ⁃ Continue my research into the algorithm and understand the process / methodology used by the team.
 ⁃ Start implementing unit tests for the existing functions in the algorithm.

Nadja:
This week:
-I finish implementing my openings into my local branch
-I merged my work into TeamSwitchAI branch so that I can push them to GitHub
-Help people finish work into Switch TeamSwitchAI

Andrei
This Week:
- I worked 10 hours to properly link external libraries
-Connectors between UI and SwitchMain
-genral cmake config

Next Week:
-finish switch
-start working to final structure of switch

Ba Cong:
	This week: 
		- Finished the heat map implementation 
		- Tested the implementation on hand-generated test cases
	Next week:
		- Work with Razvan on finding the least amount of turns to go from one position to another position
		- Try tweaking coefficients in the current heat map implementation to see find a better result 

Cassidy:
	This week:
		- instead of doing one AI per number of pons I am assuming that absent pons are at position -1 or 8 (depending on weather it's the top or bottom player) This was suggested by Andrei.
		- Coded a function class to enable me to point to multivariable functions without any issues.
		- Found 4 different Basis of functions that inuitively seem like they will lead to a good regression(I will create more if I have any better ideas)
		- Fully implemented the regression.
		-I tested everything and it all seems to work and give the right output but issue: matrix inverse seems to give weird outputs sometimes.
		-Andrei was able (after 8 hours of work with cmake) to get the Eigen library on the git through cmake (I had been using it on my local machine up to now)
	Next week:
		-quickly understand the issue with matrix inversion in Eigen and find a solution
		-once the above is done, train the ai on very small inputs (8 data points I have already created) and then test it's results to see if they are not completely crazy.
		-Finish the general structure of the switch algo (shouldn't take long, evaluation function was the biggest issue)
		-Train the Ai on some first sample data sets from the generating team.
		-code the board state communicator bewteen the UI team us (switch team) and the algo team.
		
Razvan:
	This week:
		-Did some clean-up on the code
		-Splitting the board works now without any memory leaks
		-Implemented a function which detects the colours of board corectly, for the computer vision
		Next week:
		-Merge with Dimitrije's computer vision and the openings
		-Output the chessboard for the other teams
		-Figure out why bmpClass can't be reinitialized and hopefully solve it for the sake of stability
		-Move to the algorithms teams

Dimitrije
This week:
-Debugged DV binary vision issues with jpeg/png file changes.
-Soccessfully finished the code for building the "board" object.
Next week:
-Piece recognition and merging with image recorder 
